{
    "compilerOptions": {
        /* Basic Options */
        "target": "ES5",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', or 'ESNEXT'. */
        "module": "es2015",                       /* Specify module code generation: 'none', commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
        "lib": ["dom", "esnext"],
        /* Specify library files to be included in the compilation:  */
        // "allowJs": true,                       /* Allow javascript files to be compiled. */
        // "checkJs": true,                       /* Report errors in .js files. */
        "jsx": "react",
        /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
        // "declaration": true,                   /* Generates corresponding '.d.ts' file. */
        "sourceMap": true,
        /* Generates corresponding '.map' file. */
        // "outFile": "./",                       /* Concatenate and emit output to single file. */
        "outDir": "./dist",
        /* Redirect output structure to the directory. */
        // "rootDir": "./",                       /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
        // "removeComments": true,                /* Do not emit comments to output. */
        //"noEmit": true,                         /* Do not emit outputs. */
        // "importHelpers": true,                 /* Import emit helpers from 'tslib'. */
        // "downlevelIteration": true,            /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
        // "isolatedModules": true,               /* Unconditionally emit imports for unresolved files. */

        /* Strict Type-Checking Options */
        "strict": true,
        /* Enable all strict type-checking options. */
        // "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
        // "strictNullChecks": true,              /* Enable strict null checks. */
        // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
        // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */

        /* Additional Checks */
        // "noUnusedLocals": true,                /* Report errors on unused locals. */
        // "noUnusedParameters": true,            /* Report errors on unused parameters. */
        // "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
        // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */

        /* Module Resolution Options */
        "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
        // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
        // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
        // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
        // "typeRoots": [],                       /* List of folders to include type definitions from. */
        // "types": [],                           /* Type declaration files to be included in compilation. */
        // "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
        // "preserveSymlinks": true,              /* Do not resolve the real path of symlinks. */

        /* Source Map Options */
        // "sourceRoot": "./",                    /* Specify the location where debugger should locate TypeScript files instead of source locations. */
        // "mapRoot": "./",                       /* Specify the location where debugger should locate map files instead of generated locations. */
        // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
        // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

        /* Experimental Options */
        "experimentalDecorators": true,
        /* Enables experimental support for ES7 decorators. */
        // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */

        /* Other Options */
        // "charset": ?,                          /* "The character set of the input files. */
        // "declarationDir": ?                    /* Specify output directory for generated declaration files. Requires TypeScript version 2.0 or later. */
        // "diagnostics": true,                   /* Show diagnostic information. */
        // "emitBOM": true,                       /* Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files. */
        // "reactNamespace": ?                    /* Specifies the object invoked for createElement and __spread when targeting 'react' JSX emit. */
        // "jsxFactory": "h",                     /* Specify the JSX factory function to use when targeting react JSX emit, e.g. 'React.createElement' or 'h'. Requires TypeScript version 2.1 or later. */
        "listFiles": true,
        /* Print names of files part of the compilation. */
        // "locale": "en-us",                     /* The locale to use to show error messages, e.g. en-us. */
        "newLine": "LF",
        /* Specifies the end of line sequence to be used when emitting files: 'CRLF' (dos) or 'LF' (unix). */
        //"noEmitHelpers": true,                  /* Do not generate custom helper functions like __extends in compiled output" */
        //"noEmitOnError": true,                  /* Do not emit outputs if any type checking errors were reported. */
        // "noLib": true,                         /* Do not include the default library file (lib.d.ts). */
        // "noResolve": true,                     /* Do not add triple-slash references or module import targets to the list of compiled files. */
        // "noStrictGenericChecks": true,         /* Disable strict checking of generic signatures in function types. */
        "skipDefaultLibCheck": true,
        /*  */
        "skipLibCheck": true,
        /* Skip type checking of declaration files. Requires TypeScript version 2.0 or later. */
        // "preserveConstEnums": true,            /* Do not erase const enum declarations in generated code. */
        "pretty": true,
        /* Stylize errors and messages using color and context (experimental). */
        // "suppressExcessPropertyErrors": true,  /* Suppress excess property checks for object literals. */
        // "suppressImplicitAnyIndexErrors": true,/* Suppress noImplicitAny errors for indexing objects lacking index signatures. */
        // "stripInternal": true,                 /* Do not emit declarations for code that has an '@internal' annotation. */
        // "watch": true,                         /* Watch input files. */
        // "allowUnusedLabels": true,             /* Do not report errors on unused labels. */
        // "allowUnreachableCode": true,          /* Do not report errors on unreachable code. */
        "forceConsistentCasingInFileNames": true,
        /* Disallow inconsistently-cased references to the same file. */
        "traceResolution": true,
        /* Enable tracing of the name resolution process. */
        // "noImplicitUseStrict": true,           /* Do not emit 'use strict' directives in module output. */
        "listEmittedFiles": true /* Enable to list all emitted files. Requires TypeScript version 2.0 or later. */
        // "maxNodeModuleJsDepth": 10,            /* The maximum dependency depth to search under node_modules and load JavaScript files. Only applicable with --allowJs. Default: 0 */
    },
    /* https://github.com/Microsoft/TypeScript/wiki/JavaScript-Language-Service-in-Visual-Studio#-automatic-acquisition-of-type-definitions
    "typeAcquisition": { // Auto type (.d.ts) acquisition options for this project. Requires TypeScript version 2.1 or later.
      "enable": true, // Enable auto type acquisition, Default: false
      "include": [], // Specifies a list of type declarations to be included in auto type acquisition. Ex. ["jquery", "lodash"]
      "exclude": [] // Specifies a list of type declarations to be excluded from auto type acquisition. Ex. ["jquery", "lodash"]
    }, */
    "files": [
        "src/common.d.ts",
        "src/index.tsx"
    ]
}
